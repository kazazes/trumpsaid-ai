interface IStorageItem {
  id: ID! @unique
  videoID: ID!
  path: String!
  bucket: String!
}

type User {
  id: ID! @unique
  email: String
  auth0Id: String @unique
  role: Role! @default(value: "USER")
  displayName: String
  avatar: String
  givenName: String
  familyName: String
  adminRoles: [AdminRole]
}

type VideoUpload implements IVideo {
  id: ID! @unique
  adminMetadata: VideoUploadAdminMetadata
    @relation(name: "VideoUploadAdminMetadataRelation", onDelete: CASCADE)
  createdAt: DateTime!
  updatedAt: DateTime!
  metadata: VideoUploadMetadata!
    @relation(name: "VideoUploadMetadataRelation", onDelete: CASCADE)
  publishedBy: User @relation(name: "VideoPublisher")
  published: Boolean! @default(value: "false")
  statusLog: [VideoUploadStatusLogItem!]!
    @relation(name: "VideoUploadLogItemRelation", onDelete: CASCADE)
  storageLinks: [VideoUploadStorageLink!]!
    @relation(name: "StorageLinkVideoRelation", onDelete: CASCADE)
  submitedBy: User! @relation(name: "VideoSubmitter")
  submitedUrl: String! @unique
}

type VideoUploadStorageLink implements IStorageItem {
  id: ID! @unique
  videoUpload: VideoUpload! @relation(name: "StorageLinkVideoRelation")
  path: String!
  bucket: String!
  version: VideoUploadFileLinkVersion!
  fileType: VideoUploadFileLinkType!
  mimeType: String!
}

type VideoUploadMetadata {
  id: ID! @unique
  videoUpload: VideoUpload!
    @unique
    @relation(name: "VideoUploadMetadataRelation")
  title: String @unique
  subtitle: String
  slug: String @unique
  dateRecorded: Date
  speakers: Int! @default(value: "2")
  renderStart: Float! @default(value: "0")
  renderEnd: Float! @default(value: "0")
  conversations: [VideoConversation!]!
    @relation(name: "VideoUploadConversationsRelation", onDelete: CASCADE)
  newsSources: [NewsSourceItem!]!
    @relation(name: "NewsSourceItemVideoMetadataRelation", onDelete: CASCADE)
}

type NewsSourceItem {
  id: ID! @unique
  createdAt: DateTime!
  createdBy: User @relation(name: "NewsSourceItemCreator")
  source: NewsSource @relation(name: "NewsSourceItemRelations")
  url: String!
  title: String
  reachable: Boolean! @default(value: "false")
  author: String
  publishedDate: DateTime
  lastAccessed: DateTime
  lang: String
  logo: String
  description: String
  publisher: String
}

type NewsSource {
  id: ID! @unique
  rootDomains: [NewsSourceRootDomain!]!
  name: String
  avatarPath: String
  sourceItems: [NewsSourceItem!]! @relation(name: "NewsSourceItemRelations")
}

type NewsSourceRootDomain {
  id: ID! @unique
  url: String! @unique
}

type VideoConversation {
  id: ID! @unique
  createdAt: DateTime!
  createdBy: User
  draft: Boolean! @default(value: "false")
  videoMetadata: VideoUploadMetadata!
    @relation(name: "ConversationMetadataRelation")
  blocks: [ConversationBlock!]!
    @relation(name: "ConversationBlockRelation", onDelete: CASCADE)
}

type ConversationBlock {
  id: ID! @unique
  speaker: Speaker
  start: Float!
  end: Float!
  content: String!
  entityMentions: [EntityMention!]! @relation(name: "EntityConversationMention")
}

type Entity {
  id: ID! @unique
  googleMetadataId: String @unique
  wikipediaURL: String
  name: String
  type: EntityType
  mentions: [EntityMention!]! @relation(name: "EntityMentionRelation")
  hash: String! @unique # a crc32 hash of name + type + googleMID
}

type EntityMention {
  entity: Entity @relation(name: "EntityMentionRelation")
  salience: Float
  sentiment: Float
  sentimentMagnitude: Float
  conversationBlock: ConversationBlock
    @relation(name: "EntityConversationMention")
}

type VideoUploadAdminMetadata {
  id: ID! @unique
  videoUpload: VideoUpload! @relation(name: "VideoUploadAdminMetadataRelation")
  advertisingEnabled: Boolean! @default(value: "false")
}

type VideoUploadStatusLogItem {
  id: ID! @unique
  status: VideoUploadLogItemStatus!
  videoUpload: VideoUpload! @relation(name: "VideoUploadLogItemRelation")
  event: VideoUploadLogItemEvent!
  createdAt: DateTime!
  timesoutAt: Int
  message: String
}

type Speaker {
  id: ID! @unique
  name: String! @unique
  avatarPath: String
  title: String
}

type Date {
  month: Int!
  day: Int!
  year: Int!
}
